% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svecchgp.R
\name{svecgp}
\alias{svecgp}
\title{Scaled Vecchia Gaussian Process}
\usage{
svecgp(
  X,
  y,
  ms = c(30),
  trend = "pre",
  X_trend,
  nu = 3.5,
  nug = 0,
  scale = "parms",
  var.ini,
  ranges.ini,
  select = Inf,
  print.level = 0,
  max.it = 32,
  tol.dec = 4,
  n.est = min(5000, nrow(inputs)),
  find.vcf = TRUE,
  vcf.scorefun = ls
)
}
\arguments{
\item{X}{nxd matrix of input coordinates}

\item{y}{vector of length n}

\item{ms}{vector of conditioning-set sizes}

\item{trend}{options are 'pre' (subtract sample mean as a preprocessing step), zero' (no trend), 'intercept', 'linear' (incl intercept)}

\item{X_trend}{nxp trend matrix (use if more complicated trend is desired)}

\item{nu}{smoothness parameter. 1.5,2.5,3.5,4.5 avoid bessel (faster). estimated if nu=NULL.}

\item{nug}{nugget or noise variance. estimated if nug=NULL.}

\item{scale}{scaling of inputs for ordering and conditioning. 'parms': by parameter estimates. 'ranges': to [0,1]. 'none': no scaling}

\item{var.ini}{initial value for GP variance parameter}

\item{ranges.ini}{initial values for d range parameters}

\item{select}{un-select input variables if estimated range parameter isabove select (assuming standardized [0,1] inputs)}

\item{print.level}{0: no printing. 1: print outer loop. 2: print outer+inner loop}

\item{max.it}{maximum number of iterations for inner loop}

\item{tol.dec}{converged if dot product between the step and the gradient is less than \code{10^(-convtol)}}

\item{n.est}{subsample size for estimation}

\item{find.vcf}{find a variance correction factor to be used in prediction?}

\item{vcf.scorefun}{scoring function to be used for \code{find_vcf()}}
}
\value{
Object containing fit information, including for use in predict.svecgp()
}
\description{
Note: I am not the author of this code. Packagizing it for convenience with permission from Matthias Katzfuss. See \url{https://github.com/katzfuss-group/scaledVecchia/blob/master/vecchia_scaled.R} for official version.
}
\examples{
inputs=matrix(runif(40),ncol=2)
y=sin(rowSums(inputs*5))
fit=fit_scaled(y,inputs)
summary.GpGp_fit(fit)
}
